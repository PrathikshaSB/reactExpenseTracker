{"version":3,"sources":["logo.svg","Components/Balance.jsx","Components/ExpenseCard.jsx","Components/NewTransactions.jsx","Components/Transaction.jsx","Components/Transactions.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyle","makeStyles","balance","fontSize","marginBottom","Balance","transactions","classes","total","map","transaction","amount","reduce","item","toFixed","Box","Typography","className","container","display","padding","flex","income","color","expense","ExpenseCard","filter","acc","Card","CardContent","flexDirection","marginTop","button","background","NewTransactions","addTransaction","useState","text","setText","setAmount","variant","TextField","label","onChange","e","target","value","Button","onClick","id","Math","floor","random","list","border","Transaction","deleteTransaction","abs","ListItem","style","ListItemIcon","ListItemText","primary","component","Transactions","Divider","List","header","margin","textTransform","width","borderRadius","height","App","setTransactions","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.791db2d5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { Box, Typography, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyle = makeStyles({\r\n    balance:{\r\n        fontSize: 25,\r\n        marginBottom: 20\r\n    }\r\n})\r\n\r\nconst Balance = ({transactions}) => {\r\n    const classes = useStyle();\r\n    const amount = transactions.map(transaction => transaction.amount);\r\n    const total = amount.reduce((amount, item) => (amount+=item),0).toFixed(2);\r\n    return(\r\n        <Box>\r\n        <Typography className={classes.balance}>\r\n        Balance is ₹{total}\r\n        </Typography>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Balance","import {Card, CardContent, Typography, Box, makeStyles, FormHelperText } from '@material-ui/core'\r\n\r\nconst useStyle = makeStyles({\r\n    container:{\r\n        display: 'flex',\r\n        '& > *': {\r\n            padding: 10,\r\n            flex: 1\r\n        }\r\n    },\r\n    income:{\r\n        color: 'green'\r\n    },\r\n    expense:{\r\n        color:'red'\r\n    }\r\n})\r\n\r\nconst ExpenseCard = ({ transactions }) => {\r\n    const classes = useStyle();\r\n    const amount = transactions.map(transaction => transaction.amount);\r\n    \r\n    const income = amount.filter(item => item > 0).reduce((acc, item) => (acc+=item), 0).toFixed(2);\r\n    const expense = (amount.filter(item => item < 0).reduce((acc, item) => (acc+=item), 0) * -1).toFixed(2);\r\n    return(\r\n        <Box className={classes.container}>\r\n            <Card>\r\n                <CardContent>\r\n                    <Typography>Income</Typography>\r\n                    <Typography className={classes.income}>₹{income}</Typography>\r\n                </CardContent>\r\n            </Card>\r\n            <Card>\r\n            <CardContent>\r\n                <Typography>Expense</Typography>\r\n                <Typography className={classes.expense}>₹{expense}</Typography>\r\n            </CardContent>\r\n            </Card>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ExpenseCard","\r\nimport {Box, Typography, TextField, makeStyles, Button} from '@material-ui/core';\r\nimport { useState } from 'react';\r\n\r\nconst useStyle = makeStyles({\r\n    container:{\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        marginTop: 10,\r\n        '& > *':{\r\n            marginBottom: 20\r\n        }\r\n        \r\n    },\r\n    button:{\r\n        background: '#445a6f',\r\n        color: 'white'\r\n        \r\n    }\r\n})\r\n\r\nconst NewTransactions = ({addTransaction}) => {\r\n\r\n    const classes = useStyle();\r\n\r\n    const [text,setText] = useState('');\r\n    const [amount, setAmount] = useState();\r\n\r\n    const newTransaction = e => {\r\n        const transaction = {\r\n            id: Math.floor(Math.random() * 100000000),\r\n            text: text,\r\n            amount: +amount\r\n        }\r\n\r\n        addTransaction(transaction);\r\n    }\r\n\r\n    return(\r\n        <Box className={classes.container}>\r\n            <Typography variant=\"h5\">New Transaction</Typography>\r\n            <TextField label=\"Enter expense title\" onChange = {(e) => setText(e.target.value)}></TextField>\r\n            <TextField label=\"Enter amount(if money spent, put negative sign)\" onChange = {(e) => setAmount(e.target.value)}></TextField>\r\n            <Button className={classes.button} onClick={newTransaction} variant=\"contained\">add new transaction</Button>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default NewTransactions","\r\nimport { ListItem, ListItemText, makeStyles, ListItemIcon } from \"@material-ui/core\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst useStyle = makeStyles({\r\n    list:{\r\n        marginTop:10,\r\n        border: '1px solid #f6f6f6'\r\n    }\r\n})\r\n\r\n\r\n\r\nconst Transaction = ({transaction, deleteTransaction}) => {\r\n    const classes = useStyle();\r\n    const sign = transaction.amount >= 0 ? '₹' : '-₹';\r\n    const amount = sign + Math.abs(transaction.amount);\r\n    const color = transaction.amount >=0 ? '#b3f2b5' : '#eda8ae';\r\n    return(\r\n        <ListItem style={{background: `${color}`}} className={classes.list}>\r\n            <ListItemIcon>\r\n                <DeleteIcon onClick ={() => deleteTransaction(transaction.id)}/>\r\n            </ListItemIcon>\r\n            <ListItemText primary={transaction.text} />\r\n            <ListItemText primary={amount} />\r\n        </ListItem>\r\n    )\r\n}\r\n\r\nexport default Transaction","import { Box, Typography, Divider, makeStyles, List } from \"@material-ui/core\";\r\nimport Transaction from \"./Transaction\";\r\n\r\nconst useStyle = makeStyles({\r\n    component:{\r\n        '& > *':{\r\n            marginBottom: 10\r\n        }\r\n    }\r\n})\r\n\r\nconst Transactions = ({transactions, deleteTransaction}) => {\r\n    const classes = useStyle();\r\n    return(\r\n        <Box className={classes.component}>\r\n            <Typography variant=\"h5\">Transaction history</Typography>\r\n            <Divider />\r\n            <List>\r\n                {\r\n                    transactions.map(transaction => {\r\n                        return <Transaction key={transaction.id} deleteTransaction={deleteTransaction} transaction={transaction}/>\r\n                    })\r\n                }\r\n            </List>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Transactions","\nimport { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Typography, makeStyles, Box } from '@material-ui/core';\nimport { blue } from '@material-ui/core/colors';\nimport { Component } from 'react';\nimport Balance  from './Components/Balance';\nimport ExpenseCard from './Components/ExpenseCard';\nimport NewTransactions from './Components/NewTransactions';\nimport Transactions from './Components/Transactions';\n\nconst useStyle = makeStyles({\n  header:{\n    color: '#2b302b',\n    fontSize: 35,\n    margin: '10px, 0',\n    textTransform: 'uppercase'\n  },\n  component:{\n    background: 'white',\n    width: 800,\n    padding: 10,\n    borderRadius: 20,\n    display: 'flex',\n    \n    '& > *':{\n      width: '50%',\n      padding: 10,\n      height: '80vh'\n    }\n  }\n})\n\nfunction App() {\n  const classes = useStyle();\n\n  const [transactions, setTransactions] = useState([\n    { id:1,text:\"momos\",amount:-20},\n    { id:2,text:\"salary\",amount:3000},\n    { id:3,text:\"book\",amount:-100},\n    { id:4,text:\"bonus\",amount:300}\n  ]);\n\n  const deleteTransaction = (id) => {\n    setTransactions(transactions.filter(transaction => transaction.id !== id));\n    console.log(transactions);\n  }\n\n  const addTransaction = (transaction) => {\n    setTransactions(transactions => [transaction, ...transactions]);\n  }\n\n  return (\n    <div className=\"App\">\n      <Typography className={classes.header}>EXpense TRacker</Typography>\n      <Box className={classes.component}>\n        <Box>\n          <Balance transactions={transactions}/>\n          <ExpenseCard transactions={transactions}/>\n          <NewTransactions addTransaction={addTransaction}/>\n        </Box>\n        <Box>\n          <Transactions transactions={transactions} deleteTransaction={deleteTransaction}/>\n          </Box>\n      </Box>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}